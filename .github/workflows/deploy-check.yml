name: deploy-check

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
      - '.github/**'
  pull_request:
    branches:
      - '**'
      - '!*i10n*'
    paths-ignore:
      - '**.md'
      - '.github/**'

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: install
        run: |
          yarn install --frozen-lockfile --non-interactive

      - name: Setup Environment Variables
        shell: bash
        run: |
          if [[ $GITHUB_BASE_REF ]]
          then
            echo "::set-env name=NX_BASE::remotes/origin/$GITHUB_BASE_REF"
          else
            echo "::set-env name=NX_BASE::remotes/origin/$(git rev-parse HEAD~1)"
          fi

      - name: check workspace
        run: node dist/tools/scripts/check-workspace

      - name: e2e
        shell: bash
        run: |
          yarn affected:e2e --base=$NX_BASE --configuration production --headless --parallel --maxParallel=2
