name: deploy-check

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
      - '**/*.md'
      - '**/jest.config.js'
      - '**/ng-package.json'
      - '**/package.json'
      - '**/scripts/**'
      - '**/stencil.*.config.ts'
      - '**/test-setup.ts'
      - '**/test/**'
      - '**/tsconfig.*.json'
      - '**/tsconfig.json'
      - '**/tslint.json'

  pull_request:
    branches:
      - '**'
      - '!*i10n*'
    paths-ignore:
      - '**.md'
      - '**/*.md'
      - '**/jest.config.js'
      - '**/ng-package.json'
      - '**/package.json'
      - '**/scripts/**'
      - '**/stencil.*.config.ts'
      - '**/test-setup.ts'
      - '**/test/**'
      - '**/tsconfig.*.json'
      - '**/tsconfig.json'
      - '**/tslint.json'

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v2
        id: dist-cache
        with:
          path: dist/ci
          key: dist-${{ runner.os }}-${{ env.GITHUB_HEAD_REF }}-${{ env.RUNNER_TRACKING_ID }}
          restore-keys: |
            dist-${{ runner.os }}-${{ env.GITHUB_HEAD_REF }}-

      - name: Setup Environment Variables
        shell: bash
        run: |
          if [[ -n $GITHUB_BASE_REF ]]
          then
            echo "Fetching Base Commit from GitHub"
            echo "NX_BASE=remotes/origin/$GITHUB_BASE_REF" >> $GITHUB_ENV
          else
            if [[ ! -f dist/ci/last-deploy.txt ]]
            then
              mkdir -p dist/ci && git rev-list --max-parents=0 HEAD > dist/ci/last-deploy.txt
            fi
            echo "NX_BASE=$(cat dist/ci/last-deploy.txt)" >> $GITHUB_ENV
          fi

      - name: Install
        run: yarn install --frozen-lockfile --non-interactive

  affected_e2e:
    needs: [npm]
    runs-on: ubuntu-latest
    steps:
      - name: Affected e2e
        shell: bash
        run: yarn affected:e2e --base=$NX_BASE --parallel --configuration production -- --headless

  affected_build:
    needs: [npm]
    runs-on: ubuntu-latest
    steps:
      - name: Affected Build
        shell: bash
        run: yarn affected:build --base=$NX_BASE --parallel --configuration production

  deploy:
    needs: [affected_e2e, affected_build]
    runs-on: ubuntu-latest
    steps:
      - name: update last-deploy
        shell: bash
        run: mkdir -p dist/ci && git rev-parse HEAD~1 > dist/ci/last-deploy.txt
