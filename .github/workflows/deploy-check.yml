name: deploy-check

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
      - '**/*.e2e.ts'
      - '**/*.md'
      - '**/*.spec.ts'
      - '**/jest.config.js'
      - '**/ng-package.json'
      - '**/package.json'
      - '**/scripts/**'
      - '**/stencil.*.config.ts'
      - '**/test-setup.ts'
      - '**/test/**'
      - '**/tsconfig.*.json'
      - '**/tsconfig.json'
      - '**/tslint.json'
  pull_request:
    branches:
      - '**'
      - '!*i10n*'
    paths-ignore:
      - '**.md'
      - '**/*.e2e.ts'
      - '**/*.md'
      - '**/*.spec.ts'
      - '**/jest.config.js'
      - '**/ng-package.json'
      - '**/package.json'
      - '**/scripts/**'
      - '**/stencil.*.config.ts'
      - '**/test-setup.ts'
      - '**/test/**'
      - '**/tsconfig.*.json'
      - '**/tsconfig.json'
      - '**/tslint.json'

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: install
        run: |
          yarn install --frozen-lockfile --non-interactive
      - uses: actions/cache@v1
        id: dist-cache
        with:
          path: dist/last-deploy.txt
          key: dist-${{ runner.os }}-${{ env.GITHUB_HEAD_REF }}-${{ env.RUNNER_TRACKING_ID }}
          restore-keys: |
            dist-${{ runner.os }}-${{ env.GITHUB_HEAD_REF }}-
      - name: Setup Environment Variables
        shell: bash
        run: |
          if [[ -n $GITHUB_BASE_REF ]]
          then
            echo "Fetching Base Commit from GitHub"
            echo "::set-env name=NX_BASE::remotes/origin/$GITHUB_BASE_REF"
          else
            if [[ ! -f dist/last-deploy.txt ]]
            then
              mkdir -p dist && git rev-parse HEAD~1 > dist/last-deploy.txt
            fi
            echo "::set-env name=NX_BASE::$(cat dist/last-deploy.txt)"
          fi
      - name: check workspace
        run: node dist/tools/scripts/check-workspace

      - name: e2e
        shell: bash
        run: |
          yarn affected:e2e --base=$NX_BASE --configuration production --headless --parallel --maxParallel=2

      - name: update last-deploy
        shell: bash
        run: |
          git rev-parse HEAD~1 > dist/last-deploy.txt
